/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package troyrenaudgr12pat;

import javax.swing.JOptionPane;

/**
 *
 * @author troyr
 */
public class AdminNewCustomerUI extends javax.swing.JFrame {
    
    private User adminUser;
    private Customer currentCustomer;

    /**
     * Creates new form AdminNewCustomerUI
     */
    public AdminNewCustomerUI(User adminUser, Customer c) {
        initComponents();
        this.adminUser = adminUser;
        currentCustomer = c;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        confirmBtn = new javax.swing.JButton();
        backBtn = new javax.swing.JButton();
        customerNameAdminLbl = new javax.swing.JLabel();
        firstnameAdminTF = new javax.swing.JTextField();
        customerSurnameAdminLbl = new javax.swing.JLabel();
        surnameAdminTF = new javax.swing.JTextField();
        customerCellphoneNumberAdminLbl = new javax.swing.JLabel();
        cellphoneNumberAdminTF = new javax.swing.JTextField();
        customerEmailAdminLbl = new javax.swing.JLabel();
        emailAdminTF = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        confirmBtn.setText("Confirm");
        confirmBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                confirmBtnActionPerformed(evt);
            }
        });

        backBtn.setText("Back");
        backBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backBtnActionPerformed(evt);
            }
        });

        customerNameAdminLbl.setText("Name:");

        customerSurnameAdminLbl.setText("Surname:");

        customerCellphoneNumberAdminLbl.setText("Cellphone Number:");

        customerEmailAdminLbl.setText("Email:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(backBtn)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(92, 92, 92)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(customerNameAdminLbl)
                    .addComponent(customerSurnameAdminLbl)
                    .addComponent(customerCellphoneNumberAdminLbl)
                    .addComponent(customerEmailAdminLbl))
                .addGap(65, 65, 65)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(emailAdminTF, javax.swing.GroupLayout.DEFAULT_SIZE, 98, Short.MAX_VALUE)
                    .addComponent(cellphoneNumberAdminTF)
                    .addComponent(surnameAdminTF)
                    .addComponent(firstnameAdminTF))
                .addContainerGap(954, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(confirmBtn))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(backBtn)
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(customerNameAdminLbl)
                    .addComponent(firstnameAdminTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(customerSurnameAdminLbl)
                    .addComponent(surnameAdminTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(customerCellphoneNumberAdminLbl)
                    .addComponent(cellphoneNumberAdminTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(customerEmailAdminLbl)
                    .addComponent(emailAdminTF, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 596, Short.MAX_VALUE)
                .addComponent(confirmBtn))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void confirmBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_confirmBtnActionPerformed
        String firstname = firstnameAdminTF.getText().trim();
        String surname = surnameAdminTF.getText().trim();
        String cellphoneNumber = cellphoneNumberAdminTF.getText().trim();
        String email = emailAdminTF.getText().trim();
        // Extracts text from the text fields and trims spaces

        if (firstname.isEmpty() || surname.isEmpty()) {
            JOptionPane.showMessageDialog(null, "First name and surname must be entered.");
            return;
        }
        // Check if first name and surname fields are empty

        if (cellphoneNumber.isEmpty() && email.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Either cellphone number or email must be entered.");
            return;
        }
        // Check if both cellphone number and email fields are empty

        if (!cellphoneNumber.isEmpty() && !isValidCellphoneNumber(cellphoneNumber)) {
            JOptionPane.showMessageDialog(null, "Invalid cellphone number format. Please enter a valid number.");
            return;
        }
        // Validate the cellphone number format if it is provided

        if (!email.isEmpty() && !isValidEmail(email)) {
            JOptionPane.showMessageDialog(null, "Invalid email format. Please enter a valid email.");
            return;
        }
        // Validate the email format if it is provided

        Customer newCustomer = new Customer(firstname, surname, cellphoneNumber, email);
        // Create a new Customer object with the provided details

        // Insert the new Customer using DataHandler
        DataHandler dh = new DataHandler();
        int result = dh.insertNewCustomer(newCustomer);

        if (result > 0) {
            JOptionPane.showMessageDialog(null, "Customer successfully added.");
            SelectProductsForTabUI lp = new SelectProductsForTabUI(adminUser, currentCustomer);
            lp.setVisible(true);
            this.dispose();
        } else {
            JOptionPane.showMessageDialog(null, "Error adding customer. Please try again.");
        }
    }//GEN-LAST:event_confirmBtnActionPerformed

    // Utility methods for validation
    private boolean isValidCellphoneNumber(String cellphoneNumber) {
        return cellphoneNumber.matches("\\d{10}");
        // Example pattern for a 10-digit number, adjust the pattern based on your requirements
    }

    private boolean isValidEmail(String email) {
        return email.matches("^[A-Za-z0-9+_.-]+@(.+)$");
        // Simple email pattern validation, you can enhance it based on your needs
    }
    
    private void backBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backBtnActionPerformed
        CustomerManagementUI cm = new CustomerManagementUI(adminUser, currentCustomer);
        cm.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_backBtnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AdminNewCustomerUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AdminNewCustomerUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AdminNewCustomerUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AdminNewCustomerUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                //new AdminNewCustomerUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backBtn;
    private javax.swing.JTextField cellphoneNumberAdminTF;
    private javax.swing.JButton confirmBtn;
    private javax.swing.JLabel customerCellphoneNumberAdminLbl;
    private javax.swing.JLabel customerEmailAdminLbl;
    private javax.swing.JLabel customerNameAdminLbl;
    private javax.swing.JLabel customerSurnameAdminLbl;
    private javax.swing.JTextField emailAdminTF;
    private javax.swing.JTextField firstnameAdminTF;
    private javax.swing.JTextField surnameAdminTF;
    // End of variables declaration//GEN-END:variables
}
