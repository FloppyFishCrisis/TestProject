/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package troyrenaudgr12pat;

import javax.swing.JOptionPane;

/**
 * AdminNewCustomerUI allows an admin to create a new customer with details like
 * name, surname, cellphone number, and email.
 */
public class AdminNewCustomerUI extends javax.swing.JFrame {

    private User adminUser;
    private Customer currentCustomer;

    /**
     * Constructor that initializes the AdminNewCustomerUI form. It sets the
     * current admin user and the customer details.
     *
     * @param adminUser the admin user currently logged in
     * @param c the current customer (can be null if adding new customer)
     */
    public AdminNewCustomerUI(User adminUser, Customer c) {
        initComponents();
        this.adminUser = adminUser;
        currentCustomer = c;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        confirmBtn = new javax.swing.JButton();
        backBtn = new javax.swing.JButton();
        customerNameAdminLbl = new javax.swing.JLabel();
        firstnameAdminTF = new javax.swing.JTextField();
        customerSurnameAdminLbl = new javax.swing.JLabel();
        surnameAdminTF = new javax.swing.JTextField();
        customerCellphoneNumberAdminLbl = new javax.swing.JLabel();
        cellphoneNumberAdminTF = new javax.swing.JTextField();
        customerEmailAdminLbl = new javax.swing.JLabel();
        emailAdminTF = new javax.swing.JTextField();
        ancHelpBtn = new javax.swing.JButton();
        acmImage = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMinimumSize(new java.awt.Dimension(1315, 835));
        setResizable(false);
        getContentPane().setLayout(null);

        confirmBtn.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        confirmBtn.setText("Confirm");
        confirmBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                confirmBtnActionPerformed(evt);
            }
        });
        getContentPane().add(confirmBtn);
        confirmBtn.setBounds(1169, 733, 110, 50);

        backBtn.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        backBtn.setText("Back");
        backBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backBtnActionPerformed(evt);
            }
        });
        getContentPane().add(backBtn);
        backBtn.setBounds(20, 20, 70, 30);

        customerNameAdminLbl.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        customerNameAdminLbl.setForeground(java.awt.Color.white);
        customerNameAdminLbl.setText("Name:");
        getContentPane().add(customerNameAdminLbl);
        customerNameAdminLbl.setBounds(600, 280, 45, 17);

        firstnameAdminTF.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        getContentPane().add(firstnameAdminTF);
        firstnameAdminTF.setBounds(690, 270, 120, 30);

        customerSurnameAdminLbl.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        customerSurnameAdminLbl.setForeground(java.awt.Color.white);
        customerSurnameAdminLbl.setText("Surname:");
        getContentPane().add(customerSurnameAdminLbl);
        customerSurnameAdminLbl.setBounds(580, 330, 67, 17);

        surnameAdminTF.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        getContentPane().add(surnameAdminTF);
        surnameAdminTF.setBounds(690, 320, 120, 30);

        customerCellphoneNumberAdminLbl.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        customerCellphoneNumberAdminLbl.setForeground(java.awt.Color.white);
        customerCellphoneNumberAdminLbl.setText("Cellphone Number:");
        getContentPane().add(customerCellphoneNumberAdminLbl);
        customerCellphoneNumberAdminLbl.setBounds(510, 380, 133, 14);

        cellphoneNumberAdminTF.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        getContentPane().add(cellphoneNumberAdminTF);
        cellphoneNumberAdminTF.setBounds(690, 370, 120, 30);

        customerEmailAdminLbl.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        customerEmailAdminLbl.setForeground(java.awt.Color.white);
        customerEmailAdminLbl.setText("Email:");
        getContentPane().add(customerEmailAdminLbl);
        customerEmailAdminLbl.setBounds(600, 430, 41, 17);

        emailAdminTF.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        getContentPane().add(emailAdminTF);
        emailAdminTF.setBounds(690, 420, 120, 30);

        ancHelpBtn.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        ancHelpBtn.setText("Help");
        ancHelpBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ancHelpBtnActionPerformed(evt);
            }
        });
        getContentPane().add(ancHelpBtn);
        ancHelpBtn.setBounds(1220, 20, 60, 30);

        acmImage.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        acmImage.setForeground(java.awt.Color.white);
        acmImage.setIcon(new javax.swing.ImageIcon("C:\\Users\\troyr\\Dropbox\\School Work\\IT\\TroyRenaudGr12PAT\\Troy_Gr_12_PAT_Images\\milad-fakurian-bexwsdM5BCw-unsplash.jpg")); // NOI18N
        getContentPane().add(acmImage);
        acmImage.setBounds(-1140, -160, 2700, 960);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Handles the confirm button action. It validates user input and then
     * creates a new customer. If input is invalid, it shows a message and stops
     * the process.
     *
     * @param evt the event when the confirm button is clicked
     */
    private void confirmBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_confirmBtnActionPerformed
        // Extracts text from the text fields and trims spaces
        String firstname = firstnameAdminTF.getText().trim();
        String surname = surnameAdminTF.getText().trim();
        String cellphoneNumber = cellphoneNumberAdminTF.getText().trim();
        String email = emailAdminTF.getText().trim();

        if (firstname.isEmpty() || surname.isEmpty()) {
            JOptionPane.showMessageDialog(null, "First name and surname must be entered.");
            return;
        }
        // Check if first name and surname fields are empty

        if (cellphoneNumber.isEmpty() && email.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Either cellphone number or email must be entered.");
            return;
        }
        // Check if both cellphone number and email fields are empty

        if (!cellphoneNumber.isEmpty() && !isValidCellphoneNumber(cellphoneNumber)) {
            JOptionPane.showMessageDialog(null, "Invalid cellphone number format. Please enter a valid number.");
            return;
        }
        // Validate the cellphone number format if it is provided

        if (!email.isEmpty() && !isValidEmail(email)) {
            JOptionPane.showMessageDialog(null, "Invalid email format. Please enter a valid email.");
            return;
        }
        // Validate the email format if it is provided

        Customer newCustomer = new Customer(firstname, surname, cellphoneNumber, email);
        // Create a new Customer object with the provided details

        // Insert the new Customer using DataHandler
        DataHandler dh = new DataHandler();
        int result = dh.insertNewCustomer(newCustomer);

        if (result > 0) {
            JOptionPane.showMessageDialog(null, "Customer successfully added.");
            AdminCustomerManagementUI lp = new AdminCustomerManagementUI(adminUser, currentCustomer);
            lp.setVisible(true);
            this.dispose();
        } else {
            JOptionPane.showMessageDialog(null, "Error adding customer. Please try again.");
        }
    }//GEN-LAST:event_confirmBtnActionPerformed

    /**
     * Validates if the cellphone number is in the correct format. This method
     * uses a regex pattern to ensure the number is 10 digits.
     *
     * @param cellphoneNumber the cellphone number to be validated
     * @return true if the number matches the pattern, false otherwise
     */
    private boolean isValidCellphoneNumber(String cellphoneNumber) {
        return cellphoneNumber.matches("\\d{10}");
        // Example pattern for a 10-digit number, adjust the pattern based on your requirements
    }

    /**
     * Validates if the email is in the correct format. This method uses a
     * specific pattern to ensure a valid email format.
     *
     * @param email the email to be validated
     * @return true if the email matches the pattern, false otherwise
     */
    private boolean isValidEmail(String email) {
        return email.matches("^[A-Za-z0-9+_.-]+@(.+)$");
    }

    /**
     * Handles the back button action. It returns to the previous Customer
     * Management UI and closes this window.
     *
     * @param evt the event when the back button is clicked
     */
    private void backBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backBtnActionPerformed
        AdminCustomerManagementUI cm = new AdminCustomerManagementUI(adminUser, currentCustomer);
        cm.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_backBtnActionPerformed

    /**
     * Displays a help message dialog to guide users on how to use the
     * AdminNewCustomerUI page.
     *
     * @param evt action event triggered by clicking the help button
     */
    private void ancHelpBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ancHelpBtnActionPerformed
        String helpMessage = "1. This interface allows admins to add new customers by filling in their details.\n\n"
                + "2. The following fields are required:\n"
                + "   - First Name: The customer's first name (mandatory).\n"
                + "   - Surname: The customer's last name (mandatory).\n"
                + "   - Cellphone Number: The customer's contact number (optional, but at least this or email must be provided).\n"
                + "   - Email: The customer's email address (optional, but at least this or cellphone number must be provided).\n\n"
                + "3. Once the required fields are filled out:\n"
                + "   - Click the 'Confirm' button to add the customer.\n"
                + "   - If the details are valid, the customer will be saved and you will be redirected to the product selection screen.\n\n"
                + "4. If you need to go back to the Customer Management page without adding a customer:\n"
                + "   - Click the 'Back' button to return to the previous screen.\n\n"
                + "If you encounter any issues or have further questions, please contact the system administrator.";
        JOptionPane.showMessageDialog(null, helpMessage, "Help - Add New Customer", JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_ancHelpBtnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AdminNewCustomerUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AdminNewCustomerUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AdminNewCustomerUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AdminNewCustomerUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                //new AdminNewCustomerUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel acmImage;
    private javax.swing.JButton ancHelpBtn;
    private javax.swing.JButton backBtn;
    private javax.swing.JTextField cellphoneNumberAdminTF;
    private javax.swing.JButton confirmBtn;
    private javax.swing.JLabel customerCellphoneNumberAdminLbl;
    private javax.swing.JLabel customerEmailAdminLbl;
    private javax.swing.JLabel customerNameAdminLbl;
    private javax.swing.JLabel customerSurnameAdminLbl;
    private javax.swing.JTextField emailAdminTF;
    private javax.swing.JTextField firstnameAdminTF;
    private javax.swing.JTextField surnameAdminTF;
    // End of variables declaration//GEN-END:variables
}
